---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "dyndns-client"
  labels:
    app: "dyndns-client"
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "dyndns-client"
  strategy: {}
  template:
    metadata:
      labels:
        app: dyndns-client
        app.kubernetes.io/name: dyndns
        app.kubernetes.io/instance: dyndns
        app.kubernetes.io/component: client
        app.kubernetes.io/part-of: dyndns
      annotations:
        prometheus.io/port: "9191"
        prometheus.io/scrape: "true"
    spec:
      securityContext:
        runAsUser: 41454
        runAsGroup: 41454
        fsGroup: 41454
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - image: "ghcr.io/soerenschneider/dyndns-client:1.19.0"
          imagePullPolicy: "IfNotPresent"
          name: "dyndns-client"
          ports:
            - containerPort: 9191
              name: "metrics"
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 41454
            runAsGroup: 41454
            capabilities:
              drop:
                - "ALL"
            seccompProfile:
              type: "RuntimeDefault"
          resources:
            requests:
              memory: "32Mi"
              cpu: "10m"
            limits:
              memory: "64Mi"
          env:
            - name: "DYNDNS_CLIENT_ID"
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.name"
          envFrom:
            - configMapRef:
                name: "dyndns-client-config"
          volumeMounts: []
      volumes: []
