---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ghostfolio
  labels:
    app.kubernetes.io/name: ghostfolio
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ghostfolio
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ghostfolio
        app.kubernetes.io/name: ghostfolio
        app.kubernetes.io/instance: ghostfolio-prod
        app.kubernetes.io/component: server
        app.kubernetes.io/part-of: ghostfolio
      annotations:
        prometheus.io/port: "3333"
        prometheus.io/scrape: "true"
    spec:
      # do not create env variables that clash with ghostfolio's expected env vars
      enableServiceLinks: false
      securityContext:
        runAsUser: 27712
        runAsGroup: 27712
        fsGroup: 27712
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - image: docker.io/ghostfolio/ghostfolio:2.125.0
          imagePullPolicy: IfNotPresent
          name: ghostfolio
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 27712
            runAsGroup: 27712
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          env:
            - name: NODE_ENV
              value: prod
            - name: REDIS_HOST
              value: redis
            - name: REDIS_PORT
              value: "6379"
          envFrom:
            - secretRef:
                name: ghostfolio
          resources:
            requests:
              memory: "256Mi"
              cpu: "50m"
            limits:
              memory: "512Mi"
          ports:
            - containerPort: 3333
              name: ghostfolio
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: location
          whenUnsatisfiable: ScheduleAnyway
      volumes:
        - name: tmp
          emptyDir:
            sizeLimit: 1Gi
