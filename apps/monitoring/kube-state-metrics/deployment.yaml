---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: exporter
    app.kubernetes.io/name: kube-state-metrics
  name: kube-state-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
  template:
    metadata:
      labels:
        app: kube-state-metrics
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/component: exporter
        app.kubernetes.io/instance: kube-state-metrics-prod
        app.kubernetes.io/part-of: monitoring
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      automountServiceAccountToken: true
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        seccompProfile:
          type: "RuntimeDefault"
      containers:
        - image: "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.13.0"
          name: "kube-state-metrics"
          ports:
            - containerPort: 8080
              name: "metrics"
            - containerPort: 8081
              name: "telemetry"
          livenessProbe:
            httpGet:
              path: "/healthz"
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: "/"
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 25m
              memory: 32Mi
            limits:
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            capabilities:
              drop:
                - "ALL"
            readOnlyRootFilesystem: true
            seccompProfile:
              type: "RuntimeDefault"
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: "kube-state-metrics"
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app.kubernetes.io/part-of"
                      operator: "In"
                      values:
                        - "monitoring"
                topologyKey: "kubernetes.io/hostname"
