---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "grafana"
  labels:
    app.kubernetes.io/name: "grafana"
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "grafana"
  strategy:
    type: "RollingUpdate"
  template:
    metadata:
      labels:
        app: "grafana"
        app.kubernetes.io/name: "grafana"
        app.kubernetes.io/instance: "grafana-prod"
        app.kubernetes.io/component: "grafana"
        app.kubernetes.io/part-of: "grafana"
      annotations:
        prometheus.io/port: "3000"
        prometheus.io/scrape: "true"
    spec:
      securityContext:
        runAsUser: 47242
        runAsGroup: 47242
        fsGroup: 47242
        runAsNonRoot: true
        seccompProfile:
          type: "RuntimeDefault"
      containers:
        - image: "grafana/grafana:11.5.2"
          name: "grafana"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 47242
            runAsGroup: 47242
            runAsNonRoot: true
            privileged: false
            seccompProfile:
              type: "RuntimeDefault"
            capabilities:
              drop:
                - "ALL"
          imagePullPolicy: "IfNotPresent"
          envFrom:
            - configMapRef:
                name: "grafana-config"
            - secretRef:
                name: "grafana"
                optional: true
          resources:
            requests:
              memory: "196Mi"
              cpu: "20m"
            limits:
              memory: "384Mi"
          ports:
            - containerPort: 3000
              name: "grafana"
          livenessProbe:
            httpGet:
              path: "/api/health"
              port: "grafana"
            initialDelaySeconds: 15
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: "/api/health"
              port: "grafana"
            initialDelaySeconds: 5
          startupProbe:
            httpGet:
              path: "/api/health"
              port: "grafana"
            failureThreshold: 60
            periodSeconds: 10
          volumeMounts:
            - name: "storage"
              mountPath: "/var/lib/grafana"
      volumes:
        - name: "storage"
          emptyDir: {}
